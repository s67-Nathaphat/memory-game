import tkinter as tk
import random

class MemoryGame:
    def __init__(self, master):
        self.master = master
        self.master.title("Memory Game")
        
        # สร้างปุ่มเริ่มใหม่
        self.start_button = tk.Button(self.master, text="เริ่มเกมใหม่", command=self.reset_game)
        self.start_button.grid(row=5, column=0, columnspan=2)

        # สร้างปุ่มเฉลย
        self.reveal_button = tk.Button(self.master, text="เฉลย", command=self.reveal_cards)
        self.reveal_button.grid(row=5, column=2, columnspan=2)

        # สร้าง label สำหรับข้อความชนะ
        self.win_label = tk.Label(self.master, text='', font=("Arial", 14))
        self.win_label.grid(row=6, column=0, columnspan=4)

        # สร้าง label สำหรับนับจำนวนคู่
        self.pairs_label = tk.Label(self.master, text='คู่ที่จับได้: 0 / 8', font=("Arial", 14))
        self.pairs_label.grid(row=7, column=0, columnspan=4)

        # เริ่มเกม
        self.reset_game()

    def reset_game(self):
        self.cards = list(range(8)) * 2  # มีการ์ด 8 คู่
        random.shuffle(self.cards)  # สุ่มการ์ด
        self.buttons = []
        self.first_card = None
        self.second_card = None
        self.first_index = None
        self.second_index = None
        self.flipped = 0
        self.pairs_found = 0  # จำนวนคู่ที่จับได้

        self.create_buttons()
        self.win_label.config(text='')  # ลบข้อความชนะเมื่อเริ่มเกมใหม่
        self.update_pairs_label()  # อัพเดตจำนวนคู่ที่จับได้

    def create_buttons(self):
        # ลบปุ่มเก่าออก
        for widget in self.master.grid_slaves():
            if isinstance(widget, tk.Button) and widget != self.start_button and widget != self.reveal_button:
                widget.destroy()  # ลบปุ่มเก่า
        
        for i in range(4):
            row = []
            for j in range(4):
                button = tk.Button(self.master, text='', width=5, height=2, command=lambda idx=i*4+j: self.flip_card(idx))
                button.grid(row=i, column=j)
                row.append(button)
            self.buttons.append(row)

    def flip_card(self, index):
        if self.buttons[index // 4][index % 4]['text'] == '' and self.second_card is None:
            self.buttons[index // 4][index % 4]['text'] = self.cards[index]
            
            if self.first_card is None:
                self.first_card = self.cards[index]
                self.first_index = index
            else:
                self.second_card = self.cards[index]
                self.second_index = index
                self.master.after(1000, self.check_match)

    def check_match(self):
        if self.first_card == self.second_card:
            self.flipped += 2
            self.pairs_found += 1  # เพิ่มจำนวนคู่ที่จับได้
            self.update_pairs_label()  # อัพเดตจำนวนคู่ที่จับได้
            
            if self.pairs_found == 8:  # เช็คว่าจับคู่ครบแล้วหรือยัง
                self.win_label.config(text="คุณชนะ!")
        else:
            self.buttons[self.first_index // 4][self.first_index % 4]['text'] = ''
            self.buttons[self.second_index // 4][self.second_index % 4]['text'] = ''
        
        self.first_card = None
        self.second_card = None

    def update_pairs_label(self):
        self.pairs_label.config(text=f'คู่ที่จับได้: {self.pairs_found} / 8')

    def reveal_cards(self):
        # แสดงการ์ดทั้งหมด
        for i in range(4):
            for j in range(4):
                self.buttons[i][j]['text'] = self.cards[i*4 + j]

if __name__ == "__main__":
    root = tk.Tk()
    game = MemoryGame(root)
    root.mainloop()
